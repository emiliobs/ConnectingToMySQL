@page "/people"

@using DataLibrary
@inject IDataAccess _data
@inject IConfiguration _config

<h3>People</h3>
<hr />
<button class="btn btn-primary" @onclick="InsertData">New Data.</button>
<button class="btn btn-info" @onclick="UpdateData">Update Data.</button>
<button class="btn btn-danger" @onclick="DeleteData">Delete Data.</button>
<hr />
@if (peoples == null)
{
    <p><em>Loading.....</em></p>
}
else
{
    @foreach (var people in peoples)
    {
        <p>@people.FullName</p>
    }
}

@code {

    List<PersonModel> peoples;

    public string Connection => _config.GetConnectionString("default");

    protected async override Task OnInitializedAsync()
    {
        await ListPeople();
    }

    private async Task ListPeople()
    {
        var sql = "select * from people";

        peoples = await _data.LoadData<PersonModel, dynamic>(sql, new { }, Connection);
    }

    private async Task InsertData()
    {
        var sql = "insert into people (FirstName, LastName) values (@FirstName, @LastName);";

        await _data.SaveData(sql, new { FirstName = "Lina", LastName = "Linda" }, Connection);

        await ListPeople();
    }

    private async Task UpdateData()
    {
        var sql = "update people set FirstName = @FirstName where LastName = @LastName";
        await _data.SaveData(sql, new { FirstName = "Antonio", LastName = "Barrera" }, Connection);
        await ListPeople();
    }

    private async Task DeleteData()
    {
        var sql = "delete from people where FirstName = @FirstName";
        await _data.SaveData(sql, new { FirstName = "Lina" }, Connection);
        await ListPeople();
    }



}
